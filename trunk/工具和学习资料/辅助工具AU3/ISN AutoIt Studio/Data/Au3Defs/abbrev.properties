# Global abbreviations file for SciTE
# Place this file in your home directory, that is, the same directory
# as the user options file.
# Contains a list of entries of the form abbreviation=expansion
# Type the abbreviation and press Ctrl+B to insert the expansion
# The '|' marke the position the caret will be after expansion.

#main=int main(int argc, char *argv[]) {\n|\n}
#i=if (|) {\n\n}
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
Created by UpdateDefs  (don't change anything between the dashed lines)
#------------------------------------------------------------
# ' Global abbreviations file for SciTE (abbrev.properties) Apr.13.2005 '
# ' Contains a list of entries of the form abbreviation=expansion '
# ' Type the abbreviation and press Spacebar to insert the expansion '
# ' "|" marks the position the caret will be after expansion. '
# ' "\n" marks a carriage return. "\t" marks a Tab. '

#- 'A B B R E V I A T I O N S  F O R  A U T O I T  F I N A L' -#

#; -- Files -- (use ctrl+b for this group)
au3check=C:\\Program Files\\Autoit3\\SciTe\\Au3Check\\Au3Check.exe|
autoit3=C:\\Program Files\\Autoit3\\AutoIt3.exe|
aut2exe=C:\\Program Files\\AutoIt3\\Aut2Exe\\Aut2Exe.exe|
datbeta=C:\\Program Files\\AutoIt3\\SciTe\\Defs\\unstable\\Au3Check\\au3check.dat|
datfinal=C:\\Program Files\\AutoIt3\\SciTe\\Defs\\Production\\Au3Check\\au3check.dat|
icon=C:\\Program Files\\AutoIt3\\Aut2Exe\\Icons\\|.ico
scite=C:\\Program Files\\Autoit3\\SciTe\\SciTe.exe|

#; -- Directories -- (use ctrl+b for this group)
autoit3dir=C:\\Program Files\\AutoIt3\\|
aut2exedir=C:\\Program Files\\AutoIt3\\Aut2Exe\\|
icondir=C:\\Program Files\\AutoIt3\\Aut2Exe\\Icons\\|
includedir=C:\\Program Files\\AutoIt3\\Include\\|
scitedir=C:\\Program Files\\Autoit3\\SciTe\\|

#; -- Variables --
chk=$Checkbox_|
edt=$Edit_|
inp=$Input_|
lbl=$Label_|
but=$Button_|
rad=$Radio_|
tab=$Tab_|

error=$Error |
result=$Result |

#; -- Constant GUICtrlRead --
gchecked=$GUI_CHECKED|
gunchecked=$GUI_UNCHECKED|

#; -- Constant GUICtrlState --
genable=$GUI_ENABLE|
gdisable=$GUI_DISABLE|
ghide=$GUI_HIDE|
gshow=$GUI_SHOW|
gfocus=$GUI_FOCUS|

#; -- Events and messages --
eclose=$GUI_EVENT_CLOSE|
emin=$GUI_EVENT_MINIMIZE|
erestore=$GUI_EVENT_RESTORE|
emax=$GUI_EVENT_MAXIMIZE|

#; -- PreSelected Commands --
cmd=RunWait(@ComSpec & ' /c |', '', @SW_HIDE)\n
slp1=Sleep(1000)\n|
slp2=Sleep(2000)\n|
slp3=Sleep(3000)\n|
slp4=Sleep(4000)\n|
slp5=Sleep(5000)\n|

#; -- GUI Common Prefixes to Functions --
gcc=GUICtrlCreate|
gcs=GUICtrlSet|

#; -- Macro's --
cr1=& @CRLF |
cr2=& @CRLF & @CRLF |
cr3=& @CRLF & @CRLF & @CRLF |
cr4=& @CRLF & @CRLF & @CRLF & @CRLF |
cr5=& @CRLF & @CRLF & @CRLF & @CRLF & @CRLF |
tab1=& @TAB |
tab2=& @TAB & @TAB |
tab3=& @TAB & @TAB & @TAB |
tab4=& @TAB & @TAB & @TAB & @TAB |
tab5=& @TAB & @TAB & @TAB & @TAB & @TAB |
lf1=& @LF |
lf2=& @LF & @LF |
lf3=& @LF & @LF & @LF |
lf4=& @LF & @LF & @LF & @LF |
lf5=& @LF & @LF & @LF & @LF & @LF |

#; -- Keywords --
cl=ContinueLoop|
el=ExitLoop|
err=@Error |
ext=@Extended |

#; -- Directives --
include=#include <GUIConstants.au3>\n|
includeonce=#include-once\n|
reg=#Region - |\n\n
ereg=#EndRegion\n\n|
nti=#NoTrayIcon\n\n|

#; -- Multiline Functions --
ifthen=If | Then\nEndIf
ifelse=If | Then\nElse\nEndIf
ifelseif=If | Then\nElseIf \nElse\nEndIf
dountil=Do\n\t|\nUntil
fornext=For $i = | To  Step 1\nNext
fun=Func _|()\nEndFunc
selectcase=Select\n\n\tCase |\n\t\n\tCase \n\t\n\tCase \n\t\n\tCase \n\t\n\tCase Else \n\t\nEndSelect\n
more=|\n\n\tCase \n\t\t\n\tCase \n\n\tCase \n\n\tCase \n\n\tCase Else\t
whilewend=While |\nWEnd

#; -- Start of Functions --
for0=For $i = 0 To |
for0ub=For $i = 0 To UBound(|)
for1=For $i = 1 To |
for1ub=For $i = 1 To UBound(|)

#; -- GUI setup --
setupgui=#include <GUIConstants.au3>\n\n#Region - GUI Create\n\nGUICreate(|)\n\n#EndRegion\n\nGUISetState(@SW_SHOW)\n\nselectloop\n\nfunctions
selectloop=#Region - GUI SelectLoop\n\nWhile 1\n\t$msg = GUIGetMsg()\n\nSelect\n\n\tCase $msg = -3 ;$GUI_EVENT_CLOSE\n\tExit\n\n\tCase $msg = |\n\t\n\tCase $msg = \n\t\n\tCase $msg = \n\t\n\tCase $msg = \n\t\n\tCase $msg = \n\t\nEndSelect\n\nWEnd\n#EndRegion
moremsg=$msg = |\n\n\tCase $msg = \n\t\t\n\tCase $msg = \n\n\tCase $msg = \n\n\tCase $msg = \n\n\tCase $msg =\n\t
functions=; Start - Functions\n\nFunc _|A()\nEndFunc\n\nFunc _B()\nEndFunc\n\nFunc _C()\nEndFunc\n\nFunc _D()\nEndFunc\n\nFunc _E()\nEndFunc\n\nFunc _F()\nEndFunc\n\nFunc _G()\nEndFunc\n\nFunc _H()\nEndFunc\n\nFunc _I()\nEndFunc\n\nFunc _J()\nEndFunc

#; -- Special functions --
selfdelete=Func _SelfDelete()\n\tLocal $cmdfile\n\tFileDelete(@TempDir & "\scratch.cmd")\n\t$cmdfile = ':loop' & @CRLF _\n\t\t\t& 'del "' & @ScriptFullPath & '"' & @CRLF _\n\t\t\t& 'if exist "' & @ScriptFullPath & '" goto loop' & @CRLF _\n\t\t\t& 'del ' & @TempDir & '\scratch.cmd'\n\tFileWrite(@TempDir & "\scratch.cmd", $cmdfile)\n\tRun(@TempDir & "\scratch.cmd", @TempDir, @SW_HIDE)\nEndFunc\n|

#; -- Compiler Directives + Options --
compiler=#Region - Compiler Directives\n\n#Compiler_Prompt = y\n#Compiler_AutoIt3 = \n#Compiler_Aut2Exe = \n#Compiler_Icon = \n#Compiler_OutFile =\n#Compiler_Compression = 2\n#Compiler_Allow_Decompile = y\n#Compiler_PassPhrase = \n#Compiler_Res_Comment = \n#Compiler_Res_Description = \n#Compiler_Res_Fileversion = 0.0.0.0\n#Compiler_Res_LegalCopyright = \n#Compiler_Res_Field = Platform\n#Compiler_Res_Field = AutoIt Version\n#Compiler_Run_AU3Check = y\n#Compiler_AU3Check_Dat = \n#Compiler_Run_Before = \n#Compiler_Run_After = \n#EndRegion\n\n
options=#Region - Options\n\n;~ Opt('CaretCoordMode', 0)\t\t\t; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.\n;~ Opt('ColorMode', 1)\t\t\t\t; 0 = Colors are defined as RGB (0xRRGGBB), 1 = Colors are defined as BGR (0xBBGGRR).\n;~ Opt('ExpandEnvStrings', 1)\t\t; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).\n;~ Opt('ExpandVarStrings', 1)\t\t; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).\n;~ Opt('FtpBinaryMode', 0)\t\t\t; 1 = Binary transfer, 0 = ASCII transfer.\n;~ Opt('GUICloseOnESC', 0)\t\t\t; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).\n; \t\t\t\t\t\t\t\t\t  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.\n;~ Opt('GUICoordMode', 2)\t\t\t; 1 = Absolute coordinates still relative to the dialog box.\n; \t\t\t\t\t\t\t\t\t  0 = Relative position to the start of the last control (Upper left corner).\n; \t\t\t\t\t\t\t\t\t  2 = Cell positionining relative to current cell.\n;~ Opt('GUIOnEventMode', 1)\t\t\t; 0 = Disable, 1 = Enable.\n;~ Opt('GUIResizeMode', 1)\t\t\t; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).\n;~ Opt('MouseClickDelay', 10)\t\t; ? = 10 milliseconds.\n;~ Opt('MouseClickDownDelay', 10)\t; ? = 10 milliseconds.\n;~ Opt('MouseClickDragDelay', 250)\t; ? = 250 milliseconds.\n;~ Opt('MouseCoordMode', 0)\t\t\t; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.\n;~ Opt('MustDeclareVars', 1)\t\t; 0 = No, 1 = Require pre-declare.\n;~ Opt('OnExitFunc', '')\t\t\t; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).\n;~ Opt('PixelCoordMode', 0)\t\t\t; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.\n;~ Opt('RunErrorsFatal', 0)\t\t\t; 1 = Fatal, 0 = Silent set @error.\n;~ Opt('SendAttachMode', 1)\t\t\t; 0 = Don't attach, 1 = Attach.\n;~ Opt('SendCapslockMode', 0)\t\t; 1 = Store and restore, 0 = Don't store/restore.\n;~ Opt('SendKeyDelay', 5)\t\t\t; ? = 5 milliseconds.\n;~ Opt('SendKeyDownDelay', 1)\t\t; ? = 1 millisecond.\n;~ Opt('TrayIconDebug', 1)\t\t\t; 0 = No info, 1 = Debug line info.\n;~ Opt('TrayIconHide', 1)\t\t\t; 0 = Show, 1 = Hide.\n;~ Opt('WinDetectHiddenText', 1)\t; 0 = Don't detect, 1=Do detect.\n;~ Opt('WinSearchChildren', 1)\t\t; 0 = No, 1 = Search children also.\n;~ Opt('WinTextMatchMode', 4)\t\t; 1 = Complete / Slow mode, 2 = Quick mode.\n;~ Opt('WinTitleMatchMode', 4)\t\t; 1 = Start, 2 = SubString, 3 = Exact, 4 = ...\n;~ Opt('WinWaitDelay', 250)\t\t\t; ? = 250 milliseconds.\n#EndRegion\n\n

#; -- Templates --
setupudf=#Region - |\n\n;===============================================================================\n;\n; Description:\t\t:\n; Parameter(s):\t\t:\n; Requirement:\t\t:\n; Return Value(s):\t:\n; User CallTip:\t\t:\n; Author(s):\t\t:\n; Note(s):\t\t\t:\n;\n;===============================================================================\n\n; Insert script here.\n#EndRegion\n\n

################ 'All Functions' ################

#; -- Misc Functions --
#~ abs
#~ acos
ad=AdlibDisable()|
ae=AdlibEnable(|)
#~ asc
#~ asin
as=Assign(|)
#~ atan
aso=AutoitSetOption(|)
awgt=AutoitWinGetTitle()|
awst=AutoitWinSetTitle(|)
ba=BitAND(|)
bn=BitNOT(|)
bo=BitOR(|)
bs=BitShift(|)
bx=BitXOR(|)
bi=BlockInput(|)
br=Break(|)
#~ call
cdt=CDTray(|)
#~ chr
cg=ClipGet()|
cp=ClipPut(|)
cw=ConsoleWrite(| & @LF)

#; -- Control Functions --
ccl=ControlClick(|)
cco=ControlCommand(|)
cd=ControlDisable(|)
ce=ControlEnable(|)
cf=ControlFocus(|)
cgf=ControlGetFocus(|)
cgh=ControlGetHandle(|)
cgp=ControlGetPos(|)
cgt=ControlGetText(|)
ch=ControlHide(|)
clv=ControlListView(|)
cm=ControlMove(|)
cs=ControlSend(|)
cst=ControlSetText(|)
csh=ControlShow(|)

#~ cos
#~ dec

#; -- Dir Functions --
dco=DirCopy(|)
dcr=DirCreate(|)
dgs=DirGetSize(|)
dm=DirMove(|)
dr=DirRemove(|)

dll=DllCall(|)
dllc=DllClose(|)
dllo=DllOpen(|)

#; -- Drive Functions --
dgd=DriveGetDrive(|)
dgfs=DriveGetFileSystem(|)
dgl=DriveGetLabel(|)
dgs=DriveGetSerial(|)
dgt=DriveGetType(|)
dma=DriveMapAdd(|)
dmd=DriveMapDel(|)
dmg=DriveMapGet(|)
dsl=DriveSetLabel(|)
dsf=DriveSpaceFree(|)
dst=DriveSpaceTotal(|)
ds=DriveStatus(|)

eg=EnvGet(|)
es=EnvSet(|)
eu=EnvUpdate()|
#~ eval
#~ exp

#; -- File Functions --
fcd=FileChangeDir(|)
fcl=FileClose(|)
fco=FileCopy(|)
fcs=FileCreateShortcut(|)
fd=FileDelete(|)
fe=FileExists(|)
ffff=FileFindFirstFile(|)
ffnf=FileFindNextFile(|)
fga=FileGetAttrib(|)
fgln=FileGetLongName(|)
fgs=FileGetShortcut(|)
fgsn=FileGetShortName(|)
fgsi=FileGetSize(|)
fgt=FileGetTime(|)
fgv=FileGetVersion(|)
fi=FileInstall(|)
fm=FileMove(|)
fo=FileOpen(|)
fod=FileOpenDialog(|)
fr=FileRead(|)
frl=FileReadLine(|)
frc=FileRecycle(|)
frce=FileRecycleEmpty(|)
fsd=FileSaveDialog(|)
fsf=FileSelectFolder(|)
fsa=FileSetAttrib(|)
fst=FileSetTime(|)
fw=FileWrite(|)
fwl=FileWriteLine(|)

fsp=FtpSetProxy(|)

#; --  GUI Functions --
gc=GUICreate(|)
gcca=GUICtrlCreateAvi(|)
gccb=GUICtrlCreateButton(|)
gcccb=GUICtrlCreateCheckbox(|)
gccc=GUICtrlCreateCombo(|)
gcccm=GUICtrlCreateContextMenu(|)
gccda=GUICtrlCreateDate(|)
gccdu=GUICtrlCreateDummy()|
gcce=GUICtrlCreateEdit(|)
gccg=GUICtrlCreateGroup(|)
gccgc=GUICtrlCreateGroup('', -99, -99, 1, 1) ; Close group.\n|
gccico=GUICtrlCreateIcon(|)
gcci=GUICtrlCreateInput(|)
gccla=GUICtrlCreateLabel(|)
gccli=GUICtrlCreateList(|)
gccm=GUICtrlCreateMenu(|)
gccmi=GUICtrlCreateMenuItem(|)
gccpi=GUICtrlCreatePic(|)
gccpr=GUICtrlCreateProgress(|)
gccr=GUICtrlCreateRadio(|)
gccs=GUICtrlCreateSlider(|)
gcct=GUICtrlCreateTab(|)
gccti=GUICtrlCreateTabItem(|)
gcctic=GUICtrlCreateTabItem('') ; Close tabitem.\n|
gcctv=GUICtrlCreateTreeView(|)
gcctvi=GUICtrlCreateTreeViewItem(|)
gccu=GUICtrlCreateUpdown(|)
gcd=GUICtrlDelete(|)
gcgs=GUICtrlGetState(|)
gcr=GUICtrlRead(|)
gcrm=GUICtrlRecvMsg(|)
gcsm=GUICtrlSendMsg(|)
gcstd=GUICtrlSendToDummy(|)
gcsbc=GUICtrlSetBkColor(|)
gcsco=GUICtrlSetColor(|)
gcscu=GUICtrlSetCursor(|)
gcsd=GUICtrlSetData(|)
gcsf=GUICtrlSetFont(|)
gcsi=GUICtrlSetImage(|)
gcsl=GUICtrlSetLimit(|)
gcsoe=GUICtrlSetOnEvent(|)
gcsp=GUICtrlSetPos(|)
gcsr=GUICtrlSetResizing(|)
gcss=GUICtrlSetState(|)
gcsst=GUICtrlSetStyle(|)
gcst=GUICtrlSetTip(|)
gd=GUIDelete(|)
ggci=GUIGetCursorInfo(|)
ggm=GUIGetMsg(|)
gsbc=GUISetBkColor(|)
gsc=GUISetCoord(|)
gscu=GUISetCursor(|)
gsf=GUISetFont(|)
gsh=GUISetHelp(|)
gsi=GUISetIcon(|)
gsoe=GUISetOnEvent(|)
gss=GUISetState(|)
gsg=GUIStartgroup(|)
gs=GUISwitch(|)

#~ hex
hks=HotKeySet(|)
hsp=httpSetProxy(|)
ig=InetGet(|)
igs=InetGetSize(|)

id=IniDelete(|)
ir=IniRead(|)
irs=IniReadSection(|)
irsn=IniReadSectionNames(|)
iw=IniWrite(|)

ib=InputBox(|)

#~ int
isad=IsAdmin()|
isar=IsArray(|)
isd=IsDeclared(|)
isf=IsFloat(|)
isi=IsInt(|)
isn=IsNumber(|)
iss=IsString(|)
#~ log
mgs=MemGetStats()|
#~ mod

#; --  Mouse Functions --
mc=MouseClick(|)
mcd=MouseClickDrag(|)
md=MouseDown(|)
mgc=MouseGetCursor()|
mgp=MouseGetPos()|
mm=MouseMove(|)
mu=MouseUp(|)
mw=MouseWheel(|)

mb=MsgBox(|)
num=Number(|)
#~ opt
#~ ping
pcs=PixelChecksum(|)
pgc=PixelGetColor(|)
ps=PixelSearch(|)

#; -- Process Functions --
pc=ProcessClose(|)
pe=ProcessExists(|)
pl=ProcessList(|)
psp=ProcessSetPriority(|)
pw=ProcessWait(|)
pwc=ProcessWaitClose(|)

poff=ProgressOff()|
pon=ProgressOn(|)
pset=ProgressSet(|)

rdm=Random(|)
rd=RegDelete(|)
rek=RegEnumKey(|)
rev=RegEnumVal(|)

rr=RegRead(|)
rw=RegWrite(|)

rnd=Round(|)

#~ run
ras=RunAsSet(|)
rwa=RunWait(|)

#~ send

se=SetError(|)
sex=SetExtended(|)
sd=Shutdown(|)
#~ sin

slp=Sleep(|)

sp=SoundPlay(|)
sswv=SoundSetWaveVolume(|)

sio=SplashImageOn(|)
so=SplashOff()|
sto=SplashTextOn(|)

#~ sqrt
sbgt=StatusbarGetText(|)

#; -- String Functions --
stri=String(|)
sacr=StringAddCR(|)
sf=StringFormat(|)
sis=StringInStr(|)
sian=StringIsAlNum(|)
sia=StringIsAlpha(|)
siascii=StringIsASCII(|)
sid=StringIsDigit(|)
sif=StringIsFloat(|)
sii=StringIsInt(|)
sil=StringIsLower(|)
sisp=StringIsSpace(|)
siu=StringIsUpper(|)
sixd=StringIsXDigit(|)
sl=StringLeft(|)
slen=StringLen(|)
slower=StringLower(|)
sm=StringMid(|)
srep=StringReplace(|)
sr=StringRight(|)
ss=StringSplit(|)
sscr=StringStripCR(|)
ssws=StringStripWS(|)
stl=StringTrimLeft(|)
str=StringTrimRight(|)
supper=StringUpper(|)

#; -- Misc Functions --
#~ tan
td=TimerDiff(|)
ti=TimerInit()|
toolt=ToolTip(|)

#; -- Tray Functions --
tt=TrayTip(|)

ub=UBound(|)

#; -- Window Functions --
wat=WinActivate(|)
wa=WinActive(|)
wc=WinClose(|)
we=WinExists(|)
wgcp=WinGetCaretPos()|
wgcl=WinGetClassList(|)
wgcs=WinGetClientSize(|)
wgh=WinGetHandle(|)
wgpo=WinGetPos(|)
wgpr=WinGetProcess(|)
wgs=WinGetState(|)
wgte=WinGetText(|)
wgti=WinGetTitle(|)
wk=WinKill(|)
wl=WinList(|)
wmsi=WinMenuSelectItem(|)
wma=WinMinimizeAll()|
wmau=WinMinimizeAllUndo()|
wm=WinMove(|)
wsot=WinSetOnTop(|)
wss=WinSetState(|)
wst=WinSetTitle(|)
wstr=WinSetTrans(|)
ww=WinWait(|)
wwa=WinWaitActive(|)
wwc=WinWaitClose(|)
wwna=WinWaitNotActive(|)
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
